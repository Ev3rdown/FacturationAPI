@page "/factures"

@inject HttpClient http

<h1>Factures</h1>

<p>Liste des factures</p>

@*@if (data.Factures == null)*@
@if (factures == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Numéro de facture</th>
                <th>Nom du client</th>
                <th>Date d'émission</th>
                <th>Date de règlement attendue</th>
                <th>Montant total du</th>
                <th>Montant total réglé</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @*@foreach (var facture in data.Factures)*@
            @foreach (var facture in factures)
            {
                <tr class='@colorFromFacture(facture)'>
                    <td>@facture.NumeroFacture</td>
                    <td>@facture.NomClient</td>
                    <td>@facture.DateEmission.ToString("dd MMMM yyyy")</td>
                    <td>@facture.DateAttenduReglement.ToString("dd MMMM yyyy")</td>
                    <td>@facture.MontantDu €</td>
                    <td>@facture.MontantRegle €</td>
                    <td><a href="facture/@facture.NumeroFacture"><span class="oi oi-external-link"></span></a></td>
                </tr>
            }
        </tbody>
    </table>
    <h3>@totalA</h3>
    <h3>@totalR</h3>
}

@code {
    private string totalA = "";
    private string totalR = "";
    private IEnumerable<Facture> factures = null;
    protected override async Task OnInitializedAsync()
    {
        factures = await http.GetFromJsonAsync<IEnumerable<Facture>>("api/factures");
    }
    static string colorFromFacture(Facture facture)
    {
        if (facture.estPaye) return "table-success";
        if (facture.enRetard) return "table-danger";
        if (facture.MontantRegle > 0) return "table-default";
        return "table-warning";
    }
}
