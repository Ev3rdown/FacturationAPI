@page "/facture/{identifiant}"

@using Facturation.Shared

@inject NavigationManager nav;
@inject HttpClient http;

<h1>Facture</h1>

<p>Détail de la facture</p>

@if (facture == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <tr>
            <td>Numéro de facture</td>
            <td>@facture.NumeroFacture</td>
        </tr>
        <tr>
            <th>Nom du client</th>
            <td>@facture.NomClient</td>
        </tr>
        <tr>
            <th>Date d'émission</th>
            <td>@facture.DateEmission.ToString("dd MMMM yyyy")</td>
        </tr>
        <tr>
            <th>Date de règlement attendue</th>
            <td>@facture.DateAttenduReglement.ToString("dd MMMM yyyy")</td>
        </tr>
        <tr>
            <th>Montant total du</th>
            <td>@facture.MontantDu</td>
        </tr>
        <tr class='@colorFromFacture(facture)'>
            <th>Montant total réglé</th>
            <td>@facture.MontantRegle</td>
        </tr>
    </table>
}

@code {
    [Parameter]
    public string identifiant { get; set; }

    private Facture facture;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            facture = await http.GetFromJsonAsync<Facture>("api/factures/" + identifiant);
        }
        catch (System.Net.Http.HttpRequestException)
        {
            nav.NavigateTo("/");
        }
    }
    static string colorFromFacture(Facture facture)
    {
        if (facture.estPaye) return "table-success";
        if (facture.enRetard) return "table-danger";
        if (facture.MontantRegle > 0) return "table-default";
        return "table-warning";
    }
}